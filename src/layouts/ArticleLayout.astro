---
/**
 * Builds off from the BaseLayout and is used to create the articles.
 */

import "../styles/article.css";

import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

import BaseLayout from "./BaseLayout.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Section from "../components/Section.astro";

import ItchioLink from "../components/Icons/ItchioLink.astro";
import SteamLink from "../components/Icons/SteamLink.astro";
import GithubLink from "../components/Icons/GithubLink.astro";

interface Props {
  prevNav: string;
  title: string;
  description: string;
  coverImage: ImageMetadata;
  coverImageAlt: string;
  summaryPoints: string[];
  published: Date;
  updated?: Date;
  itchio?: string;
  steam?: string;
  github?: string;
}

const {
  prevNav,
  title,
  description,
  coverImage,
  coverImageAlt,
  summaryPoints,
  published,
  updated,
  itchio,
  steam,
  github,
} = Astro.props;
---

<BaseLayout prevNav={prevNav} title={title} description={description}>
  <!-- Title Section -->
  <Section noPadding class="relative group overflow-hidden">
      <div class="-z-10 absolute h-full left-64 top-0 rounded-bl-full overflow-hidden">
        <Image
          class="object-cover h-full"
          src={coverImage}
          alt={coverImageAlt}
          width="1280"
          height="720"
        />
      </div>
      <div class="p-4 flex flex-row">
        <div class="flex-grow">
          <h1>{title}</h1>
          <div class="text-sm">
            <span>
              Published: <FormattedDate date={published} />
            </span> -
            {
              updated && (
                <span>
                  Updated: <FormattedDate date={updated} />
                </span>
              )
            }
          </div>
          <p>{description}</p>
          <div class="mt-2">
          {
            summaryPoints && (
                <h2>Summary Points</h2>
                <ul class="text-start">
                  {summaryPoints.map((p) => (
                    <li>{p}</li>
                  ))}
                </ul>
            )
          }
          </div>
        </div>
        <div class="flex-shrink flex flex-col justify-end items-end gap-2">
          {
            itchio && (
              <ItchioLink
                href={itchio}
                size={32}
              />
            )
          }
          {
            steam && (
              <SteamLink
                href={steam}
                size={32}
              />
            )
          }
          {
            github && (
              <GithubLink
                href={github}
                size={32}
              />
            )
          }
        </div>
      </div>
  </Section>
  <!-- Article Content -->
  <Section noMargin articleContent class="md:w-3/4 m-4 md:mx-auto">
    <slot />
  </Section>
</BaseLayout>
