---
import { SITE_NAVIGATION } from "../const";
import type { NavLinkParent, NavLink } from "../const";

interface Props {
  current: String;
}

const { current } = Astro.props;

const filterNav = () => {
  const currentNav: NavLinkParent[] = [...SITE_NAVIGATION];

  currentNav.forEach((nav) => {
    if (nav.children === undefined) return;
    nav.children = nav.children.filter((pn) => pn.href !== current);
  });

  const filteredNav: NavLinkParent[] = currentNav.filter(
    (nav) =>
      (nav.children !== undefined && nav.children.length !== 0) ||
      nav.href !== current
  );

  return filteredNav;
};

const navigation = filterNav();
---

<navbar-custom>
  <nav
    id="navbar-top"
    class="sticky z-40 top-0 inset-x-0 p-4 m-4 bg-cyan-900 rounded-md"
  >
    <div class="mx-auto text-center text-sm">Navigation Bar</div>
    <button
      class="navbar-hide-btn bg-cyan-950 p-2 rounded-md w-full text-start"
    >
      {current}
    </button>
  </nav>

  <!-- This would have flex when toggled -->
  <nav
    id="navbar-overlay"
    class="fixed z-40 inset-0 p-4 m-4 hidden flex-col justify-start items-start bg-cyan-900 rounded-md"
  >
    <div class="mx-auto text-center text-sm">Where to?</div>
    <button
      class="navbar-hide-btn w-full bg-cyan-950 p-2 rounded-md text-start"
    >
      {current}
    </button>

    <!-- Contains the navigation links -->
    <div class="flex flex-col gap-2 w-full h-full overflow-y-auto mt-2">
      {
        navigation.map((nav) => (
          <div class="flex flex-col">
            <a
              href={nav.href}
              class="bg-cyan-950 px-4 py-2 text-xl rounded-r-md w-fit"
            >
              {nav.label}
              <span class="text-cyan-600 text-sm">{nav.href}</span>
            </a>
            {nav.children && (
              <div class="flex flex-col gap-1 p-1 border-cyan-950 border-4 rounded-md rounded-tl-none w-full">
                {nav.children.map((childrenNav) => (
                  <a
                    href={`${nav.href}${childrenNav.href}`}
                    class="bg-cyan-950 px-4 py-2 rounded-md w-fit"
                  >
                    {childrenNav.label}
                    <span class="text-cyan-600 text-sm">
                      {nav.href + childrenNav.href}
                    </span>
                  </a>
                ))}
              </div>
            )}
          </div>
        ))
      }
    </div>
  </nav>
  <!-- *end* Contains the navigation links -->
</navbar-custom>

<script>
  class Navbar extends HTMLElement {
    static navbarTop = document.getElementById("navbar-top");
    static navbarOverlay = document.getElementById("navbar-overlay");
    static hideButtons = document.getElementsByClassName("navbar-hide-btn");

    constructor() {
      super();

      const toggleHidden = () => {
        Navbar.navbarTop.classList.toggle("hidden");
        // Navbar.navbarTop.classList.toggle("flex");

        Navbar.navbarOverlay.classList.toggle("hidden");
        Navbar.navbarOverlay.classList.toggle("flex");
      };

      console.log(Navbar.hideButtons);

      Navbar.hideButtons.item(0).addEventListener("click", toggleHidden);
      Navbar.hideButtons.item(1).addEventListener("click", toggleHidden);
    }
  }

  customElements.define("navbar-custom", Navbar);
</script>
